#ifndef TABLE_H
#define TABLE_H
#include <QString>
#include <QMap>
class Table
{
    public:
        Table();
		//Table();
		/**
		* @brief Разбиение на лексемы.
		*
		* Функция принимает строку в качестве параметра, разбивает ее на слова и
		* заносит их в соответствующую таблицу.
		*
		* @return @ref void
        */
		void tokenizeString(QString string);
		/**
		*@brief Вставка в таблицу со спамом.
		*
		* Функция принимает список строк и вставляет в таблицу со спамом те из них,
		* которых там нет, и увеличивает частоту встречаемости тех, 
		* которые уже есть.
		*
		*@return @ref void
		*/
        void insertIntoSPAMTable(QStringList listTokens);
		/**
		*@brief Вставка в таблицу с неспамом.
		* Функция принимает список строк и вставляет в таблицу с неспамом те из них,
		* которых там нет, и увеличивает частоту встречаемости тех, 
		* которые уже есть.
		*
		*@return @ref void
		*/
        void insertIntoHAMTable(QStringList listTokens);
		/**
		*@brief Таблица спама.
		*
		* Таблица, представленная с помощью контейнера QMap,
		* содержит в качестве ключа слово (тип QString), являющееся спамом,
		* в качестве значения - частоту встречаемости этого слова
		* в обучающих текстах (тип double).
		*
		*/		
        QMap<QString, double> spamTable;
		/**
		*@brief Получение значения по ключу.
		*
		* Функция получает значение - частоту встречаемости слова - 
		* из соответствующей таблицы по ключу - переданному слову.
		*
		*@return @ref double
		*/
        double getKey(QString string, QMap<QString, double> &table);	
	        /**
                *@brief Получение количества слов в таблице.
                *
                * Функция возвращает количество слов в таблице, суммируя частоту появления слов.
                *
                *@return @ref double
                 */
        double getCount(QMap<QString, double> &table);
		/**
		*@brief Таблица неспама.
		*
		* Таблица, представленная с помощью контейнера QMap,
		* содержит в качестве ключа слово (тип QString), являющееся неспамом,
		* в качестве значения - частоту встречаемости этого слова
		* в обучающих текстах (тип double).
		*
		*/		
        QMap<QString, double> hamTable;
};
#endif // TABLE_H
